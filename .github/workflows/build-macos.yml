name: Build macOS .app

on:
  workflow_dispatch:  # manual trigger

jobs:
  build-macos:
    runs-on: macos-latest

    env:
      FINAL_APP_NAME: PitzlEdelridScraper.app  # what we ship

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show runner Python
        run: python3 --version

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip tooling & install deps
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Clean old build/dist
        run: |
          rm -rf build dist
          mkdir dist

      - name: Build with py2app
        run: |
          python setup.py py2app
          echo "=== dist contents after build ==="
          find dist -maxdepth 3 -print

      - name: Locate built .app (must be exactly one)
        id: locate_app
        run: |
          set -e
          apps_found=$(find dist -maxdepth 1 -type d -name "*.app")
          count=$(echo "$apps_found" | grep -c '.app' || true)

          echo "Found $count app bundle(s):"
          echo "$apps_found"

          if [ "$count" -eq 0 ]; then
            echo "::error ::No .app produced by py2app build."
            exit 1
          elif [ "$count" -gt 1 ]; then
            echo "::error ::Multiple .app bundles found. Please clean or adjust setup.py."
            exit 1
          fi

          # capture the single path
          app_path="$apps_found"
          echo "app_path=$app_path" >> "$GITHUB_OUTPUT"

      - name: Rename to stable name
        run: |
          src="${{ steps.locate_app.outputs.app_path }}"
          dest="dist/${FINAL_APP_NAME}"
          echo "Renaming $src -> $dest"
          rm -rf "$dest"
          mv "$src" "$dest"
          ls -lah dist

      - name: Zip .app bundle
        run: |
          cd dist
          zip -r "../${FINAL_APP_NAME}.zip" "${FINAL_APP_NAME}"
          cd ..
          ls -lah "${FINAL_APP_NAME}.zip"

      - name: Upload .app zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: ${{ env.FINAL_APP_NAME }}.zip
          if-no-files-found: error
          compression-level: 0  # already zipped
